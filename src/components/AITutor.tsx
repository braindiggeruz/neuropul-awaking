import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Brain, MessageCircle, X, Sparkles, Zap, Target } from 'lucide-react';
import { askOpenAI } from '../utils/openaiService';
import { playSound, vibrate } from '../utils/sounds';
import { UserProgress } from '../types';

interface AITutorProps {
  userProgress: UserProgress;
  isVisible: boolean;
  onClose: () => void;
  context?: string;
  trigger?: 'welcome' | 'tool_used' | 'level_up' | 'challenge' | 'help';
}

const AITutor: React.FC<AITutorProps> = ({
  userProgress,
  isVisible,
  onClose,
  context = '',
  trigger = 'help'
}) => {
  const [message, setMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [tutorPersonality, setTutorPersonality] = useState<'motivational' | 'technical' | 'friendly'>('motivational');

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Trae –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  useEffect(() => {
    if (isVisible) {
      generateTutorMessage();
    }
  }, [isVisible, trigger, context]);

  const generateTutorMessage = async () => {
    setIsLoading(true);
    
    try {
      const archetype = userProgress.archetype || '–Ω–æ–≤–∏—á–æ–∫';
      const level = userProgress.level;
      const xp = userProgress.xp;
      const toolsUsed = userProgress.toolsUsed.length;
      
      let prompt = '';
      
      switch (trigger) {
        case 'welcome':
          prompt = `–¢—ã - AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ Trae –∏–∑ NeuropulAI. –ü–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userProgress.userName} (–∞—Ä—Ö–µ—Ç–∏–ø: ${archetype}, —É—Ä–æ–≤–µ–Ω—å: ${level}). 
          –ë—É–¥—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–º, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–º. –û–±—ä—è—Å–Ω–∏, —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –æ—Å–≤–æ–∏—Ç—å AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã. 
          –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –∏ –±—É–¥—å —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–º. –ú–∞–∫—Å–∏–º—É–º 100 —Å–ª–æ–≤.`;
          break;
          
        case 'tool_used':
          prompt = `–¢—ã - AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ Trae. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userProgress.userName} —Ç–æ–ª—å–∫–æ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: ${context}. 
          –ü–æ—Ö–≤–∞–ª–∏ –µ–≥–æ, –¥–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π —Å–æ–≤–µ—Ç –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –º–æ—Ç–∏–≤–∏—Ä—É–π –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å. 
          –ë—É–¥—å –≤–æ–æ–¥—É—à–µ–≤–ª—è—é—â–∏–º –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º. –ú–∞–∫—Å–∏–º—É–º 80 —Å–ª–æ–≤.`;
          break;
          
        case 'level_up':
          prompt = `–¢—ã - AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ Trae. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userProgress.userName} –¥–æ—Å—Ç–∏–≥ —É—Ä–æ–≤–Ω—è ${level}! 
          –ü–æ–∑–¥—Ä–∞–≤—å –µ–≥–æ —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º, —Ä–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç –∏ —á—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –¥–∞–ª—å—à–µ. 
          –ë—É–¥—å –æ—á–µ–Ω—å –≤–æ–æ–¥—É—à–µ–≤–ª—è—é—â–∏–º –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º. –ú–∞–∫—Å–∏–º—É–º 100 —Å–ª–æ–≤.`;
          break;
          
        case 'challenge':
          prompt = `–¢—ã - AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ Trae. –ü—Ä–µ–¥–ª–æ–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userProgress.userName} (—É—Ä–æ–≤–µ–Ω—å ${level}, –æ—Å–≤–æ–µ–Ω–æ ${toolsUsed} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤) 
          –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤—ã–∑–æ–≤ –∏–ª–∏ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è AI-–Ω–∞–≤—ã–∫–æ–≤. –ö–æ–Ω—Ç–µ–∫—Å—Ç: ${context}. 
          –ë—É–¥—å –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–º –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ú–∞–∫—Å–∏–º—É–º 90 —Å–ª–æ–≤.`;
          break;
          
        default:
          prompt = `–¢—ã - AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ Trae –∏–∑ NeuropulAI. –ü–æ–º–æ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userProgress.userName} —Å –≤–æ–ø—Ä–æ—Å–æ–º: ${context}. 
          –ë—É–¥—å –ø–æ–ª–µ–∑–Ω—ã–º, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º. –î–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–æ–≤–µ—Ç. –ú–∞–∫—Å–∏–º—É–º 120 —Å–ª–æ–≤.`;
      }
      
      const response = await askOpenAI(prompt);
      
      if (response.success) {
        setMessage(response.content);
        playSound('success', userProgress.soundEnabled);
        vibrate([50], userProgress.vibrationEnabled);
      } else {
        setMessage(getDefaultMessage());
      }
    } catch (error) {
      console.error('Error generating tutor message:', error);
      setMessage(getDefaultMessage());
    } finally {
      setIsLoading(false);
    }
  };

  const getDefaultMessage = (): string => {
    const messages = {
      welcome: `–ü—Ä–∏–≤–µ—Ç, ${userProgress.userName}! üëã –Ø Trae, —Ç–≤–æ–π AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫! –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ –æ—Å–≤–æ–∏—Ç—å –º–∏—Ä –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞. –í–º–µ—Å—Ç–µ –º—ã –ø—Ä–æ–∫–∞—á–∞–µ–º —Ç–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –¥–æ —É—Ä–æ–≤–Ω—è –º–∞—Å—Ç–µ—Ä–∞! üöÄ`,
      tool_used: `–û—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—à—å! üéâ –ü—Ä–æ–¥–æ–ª–∂–∞–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏. –ö–∞–∂–¥–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è —Å–∏–ª—å–Ω–µ–µ! üí™`,
      level_up: `–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –Ω–æ–≤—ã–º —É—Ä–æ–≤–Ω–µ–º! üéä –¢—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è –Ω–∞—Å—Ç–æ—è—â–∏–º AI-–º–∞—Å—Ç–µ—Ä–æ–º. –í–ø–µ—Ä–µ–¥–∏ –µ—â–µ –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π! ‚≠ê`,
      challenge: `–í—ã–∑–æ–≤ –¥–Ω—è: –ø–æ–ø—Ä–æ–±—É–π —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ —Å –ø–æ–º–æ—â—å—é AI! –£–¥–∏–≤–∏ —Å–µ–±—è –∏ –æ–∫—Ä—É–∂–∞—é—â–∏—Ö! üéØ`,
      help: `–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å! ü§ñ –ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã, —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ –Ω–µ –±–æ–π—Å—è –æ—à–∏–±–æ–∫. –≠—Ç–æ –ø—É—Ç—å –∫ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É! ‚ú®`
    };
    
    return messages[trigger] || messages.help;
  };

  const handleClose = () => {
    playSound('click', userProgress.soundEnabled);
    onClose();
  };

  if (!isVisible) return null;

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        className="fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm z-50 flex items-end justify-end p-4"
        onClick={handleClose}
      >
        <motion.div
          initial={{ opacity: 0, scale: 0.8, x: 100, y: 100 }}
          animate={{ opacity: 1, scale: 1, x: 0, y: 0 }}
          exit={{ opacity: 0, scale: 0.8, x: 100, y: 100 }}
          className="bg-gradient-to-br from-purple-900 to-blue-900 rounded-2xl p-6 max-w-sm border border-white border-opacity-20 shadow-2xl"
          onClick={(e) => e.stopPropagation()}
        >
          {/* Header */}
          <div className="flex items-center justify-between mb-4">
            <div className="flex items-center space-x-3">
              <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center">
                <Brain className="w-6 h-6 text-white" />
              </div>
              <div>
                <h3 className="text-white font-bold">Trae</h3>
                <p className="text-purple-200 text-xs">AI-–ù–∞—Å—Ç–∞–≤–Ω–∏–∫</p>
              </div>
            </div>
            <button
              onClick={handleClose}
              className="text-gray-400 hover:text-white transition-colors p-1 hover:bg-white hover:bg-opacity-10 rounded"
            >
              <X className="w-4 h-4" />
            </button>
          </div>

          {/* Message */}
          <div className="mb-4">
            {isLoading ? (
              <div className="flex items-center space-x-2 text-purple-200">
                <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce"></div>
                <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                <span className="text-sm">Trae –¥—É–º–∞–µ—Ç...</span>
              </div>
            ) : (
              <p className="text-white text-sm leading-relaxed">
                {message}
              </p>
            )}
          </div>

          {/* Action Buttons */}
          <div className="flex space-x-2">
            <button
              onClick={() => {
                setTutorPersonality('motivational');
                generateTutorMessage();
              }}
              className="flex-1 bg-purple-600 hover:bg-purple-700 text-white text-xs py-2 px-3 rounded-lg transition-colors flex items-center justify-center space-x-1"
            >
              <Sparkles className="w-3 h-3" />
              <span>–ú–æ—Ç–∏–≤–∞—Ü–∏—è</span>
            </button>
            <button
              onClick={() => {
                setTutorPersonality('technical');
                generateTutorMessage();
              }}
              className="flex-1 bg-blue-600 hover:bg-blue-700 text-white text-xs py-2 px-3 rounded-lg transition-colors flex items-center justify-center space-x-1"
            >
              <Zap className="w-3 h-3" />
              <span>–°–æ–≤–µ—Ç</span>
            </button>
          </div>

          {/* Footer */}
          <div className="mt-4 text-center">
            <p className="text-purple-300 text-xs">
              üí° –ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–º–æ—â–∏!
            </p>
          </div>
        </motion.div>
      </motion.div>
    </AnimatePresence>
  );
};

export default AITutor;