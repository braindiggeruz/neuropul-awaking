import React from 'react';
import { createRoot } from 'react-dom/client';
import App from './App.tsx';
import './index.css';
import './styles/cyberpunk.css';
import './styles/global.css';
import { setupGlobalErrorHandling } from './lib/utils/errorLogger';

// Set up global error handling
setupGlobalErrorHandling();

console.log('üåê main.tsx –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è');

// CRITICAL FIX: Clear portal screen and navigation flags on app start
console.log('üßπ Cleaning up navigation state on app start');
localStorage.removeItem('neuropul_current_screen');
localStorage.removeItem('neuropul_navigation_in_progress');

// –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–∞–¥–µ—Ä–∞ –µ—Å–ª–∏ –æ–Ω –æ—Å—Ç–∞–ª—Å—è –≤–∏—Å–µ—Ç—å
const removeLoader = () => {
  console.log('üßπ Attempting to remove initial loader');
  const loader = document.getElementById('initial-loader');
  if (loader) {
    console.log('üßπ Initial loader found, removing');
    loader.style.opacity = '0';
    loader.style.transition = 'opacity 0.5s ease';
    setTimeout(() => {
      if (loader && loader.parentNode) {
        loader.parentNode.removeChild(loader);
        console.log('üßπ Initial loader removed');
      }
    }, 500);
  } else {
    console.log('üßπ Initial loader not found');
  }
};

// –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —É–¥–∞–ª–∏–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫ (–µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫)
setTimeout(removeLoader, 3000);

// –°–æ–±—ã—Ç–∏–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –æ–∫–Ω–∞
window.addEventListener('load', removeLoader);

// DOMContentLoaded (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
document.addEventListener('DOMContentLoaded', removeLoader);

// Create a function to handle errors during rendering
const renderApp = () => {
  try {
    console.log('üîç Finding root element');
    const rootElement = document.getElementById('root');
    if (!rootElement) {
      throw new Error('Root element not found');
    }
    
    console.log('üîç Creating React root');
    const root = createRoot(rootElement);
    
    console.log('üîç Rendering React app');
    root.render(
      // Temporarily remove StrictMode to avoid double mounting effects
      <App />
    );
    
    console.log('‚úÖ React rendered successfully');
  } catch (error) {
    console.error('‚ùå Error rendering app:', error);
    
    // Display a minimal fallback UI
    const rootElement = document.getElementById('root');
    if (rootElement) {
      rootElement.innerHTML = `
        <div style="min-height: 100vh; background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%); display: flex; align-items: center; justify-content: center; padding: 20px; color: white; font-family: sans-serif;">
          <div style="background: rgba(0,0,0,0.5); border-radius: 12px; padding: 24px; max-width: 500px; text-align: center;">
            <div style="font-size: 48px; margin-bottom: 16px;">‚ö†Ô∏è</div>
            <h2 style="font-size: 24px; margin-bottom: 16px;">–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h2>
            <p style="margin-bottom: 24px;">–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ NeuropulAI. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.</p>
            <button onclick="window.location.reload()" style="background: #8b5cf6; border: none; color: white; padding: 12px 24px; border-radius: 8px; cursor: pointer;">
              –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </button>
            <div style="margin-top: 16px;">
              <button onclick="localStorage.clear(); sessionStorage.clear(); window.location.href = '/';" style="background: #ef4444; border: none; color: white; padding: 8px 16px; border-radius: 8px; cursor: pointer; font-size: 12px;">
                –°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      `;
    }
    
    // Also remove the loader
    removeLoader();
  }
};

// Call the render function
renderApp();

console.log('üöÄ React –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω');

// CRITICAL FIX: Add emergency escape hatch
window.addEventListener('error', (event) => {
  console.error('üö® Uncaught error:', event.error);
  
  // If there's an error, clear navigation state
  localStorage.removeItem('neuropul_current_screen');
  localStorage.removeItem('neuropul_navigation_in_progress');
});