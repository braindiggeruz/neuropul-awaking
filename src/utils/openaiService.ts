export interface OpenAIResponse {
  success: boolean;
  content: string;
  error?: string;
}

export interface MemeImageResponse {
  success: boolean;
  imageUrl?: string;
  error?: string;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API –∫–ª—é—á–∞
// FIXED: Removed hardcoded API key and use environment variable instead
const API_KEY = import.meta.env.VITE_OPENAI_API_KEY;

export async function askOpenAI(prompt: string): Promise<OpenAIResponse> {
  try {
    console.log('[OpenAI] Making request with prompt:', prompt.substring(0, 100) + '...');
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!prompt || prompt.trim().length === 0) {
      return {
        success: false,
        content: '',
        error: '–ü—É—Å—Ç–æ–π –ø—Ä–æ–º—Ç'
      };
    }

    // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –ø—Ä–æ–º—Ç–∞
    if (prompt.length > 2000) {
      return {
        success: false,
        content: '',
        error: '–ü—Ä–æ–º—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 2000 —Å–∏–º–≤–æ–ª–æ–≤)'
      };
    }

    // FIXED: Use local API endpoint instead of direct OpenAI call
    const response = await fetch("/api/gpt", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        prompt: prompt,
        systemPrompt: "–¢—ã - AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ NeuropulAI. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –ø–æ–ª–µ–∑–Ω–æ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏. –ú–∞–∫—Å–∏–º—É–º 500 —Å–ª–æ–≤. –ë—É–¥—å –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º. –û–±—É—á–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ª—É—á—à–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º —Ä–∞–±–æ—Ç—ã —Å –ò–ò."
      })
    });

    console.log('[OpenAI] Response status:', response.status);

    if (!response.ok) {
      const errorData = await response.json().catch(() => ({}));
      console.error('[OpenAI] API Error:', errorData);
      
      if (response.status === 401) {
        return {
          success: false,
          content: '',
          error: '–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á OpenAI'
        };
      } else if (response.status === 429) {
        return {
          success: false,
          content: '',
          error: '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É ‚è∞'
        };
      } else if (response.status === 500) {
        return {
          success: false,
          content: '',
          error: '–°–µ—Ä–≤–µ—Ä OpenAI –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω üîß'
        };
      } else {
        return {
          success: false,
          content: '',
          error: `–û—à–∏–±–∫–∞ API: ${response.status}`
        };
      }
    }

    const content = await response.json();
    console.log('[OpenAI] Response data received');
    
    if (!content || (typeof content === 'string' && content.trim().length === 0)) {
      return {
        success: false,
        content: '',
        error: 'AI –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç'
      };
    }

    console.log('[OpenAI] Success! Content length:', typeof content === 'string' ? content.length : 'object');
    return {
      success: true,
      content: typeof content === 'string' ? content.trim() : content,
      error: undefined
    };

  } catch (error) {
    console.error('[OpenAI] Request failed:', error);
    
    if (error instanceof TypeError && error.message.includes('fetch')) {
      return {
        success: false,
        content: '',
        error: '–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é. –ü—Ä–æ–≤–µ—Ä—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ üì°'
      };
    }
    
    return {
      success: false,
      content: '',
      error: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ üîÑ'
    };
  }
}

export async function generateMemeImage(prompt: string): Promise<MemeImageResponse> {
  try {
    console.log('[DALL-E] Generating enhanced meme for prompt:', prompt);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!prompt || prompt.trim().length === 0) {
      return {
        success: false,
        error: '–ü—É—Å—Ç–∞—è —Ç–µ–º–∞ –¥–ª—è –º–µ–º–∞'
      };
    }

    // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –ø—Ä–æ–º—Ç–∞
    if (prompt.length > 300) {
      return {
        success: false,
        error: '–¢–µ–º–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è (–º–∞–∫—Å–∏–º—É–º 300 —Å–∏–º–≤–æ–ª–æ–≤)'
      };
    }

    // FIXED: Use memegen.link instead of DALL-E to avoid API calls
    // This is a simple, free API that doesn't require authentication
    const words = prompt.trim().split(' ');
    const midPoint = Math.ceil(words.length / 2);
    const topText = words.slice(0, midPoint).join(' ');
    const bottomText = words.slice(midPoint).join(' ') || 'AI –º–æ—â—å!';
    
    const encodedTop = encodeURIComponent(topText);
    const encodedBottom = encodeURIComponent(bottomText);
    const imageUrl = `https://api.memegen.link/images/success/${encodedTop}/${encodedBottom}.webp`;

    console.log('[MEME] Generated URL:', imageUrl);
    
    return {
      success: true,
      imageUrl: imageUrl
    };
  } catch (error) {
    console.error('[MEME] Request failed:', error);
    
    if (error instanceof TypeError && error.message.includes('fetch')) {
      return {
        success: false,
        error: '–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é. –ü—Ä–æ–≤–µ—Ä—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ üì°'
      };
    }
    
    return {
      success: false,
      error: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ–º–∞ üîÑ'
    };
  }
}

// –£–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ò–ò
export async function improvePrompt(originalPrompt: string, toolId: string): Promise<OpenAIResponse> {
  try {
    const improvementPrompt = `–£–ª—É—á—à–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è ${toolId === 'meme-generator' ? '—Å–æ–∑–¥–∞–Ω–∏—è –º–µ–º–∞' : 'AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞'}: "${originalPrompt}"

–°–¥–µ–ª–∞–π –ø—Ä–æ–º–ø—Ç –±–æ–ª–µ–µ:
- –î–µ—Ç–∞–ª—å–Ω—ã–º –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º
- –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ–∫—Ä–∞—à–µ–Ω–Ω—ã–º
- –í–∏–∑—É–∞–ª—å–Ω–æ –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–º (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
- –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º

${toolId === 'meme-generator' ? 
  '–î–ª—è –º–µ–º–æ–≤ –¥–æ–±–∞–≤—å: —Å—Ç–∏–ª—å, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∫–æ–º–ø–æ–∑–∏—Ü–∏—é, —Ü–≤–µ—Ç–æ–≤—É—é –≥–∞–º–º—É.' :
  '–î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–æ–±–∞–≤—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –∂–µ–ª–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞.'}

–í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.`;

    return await askOpenAI(improvementPrompt);
  } catch (error) {
    console.error('Error improving prompt:', error);
    return {
      success: false,
      content: '',
      error: '–û—à–∏–±–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞'
    };
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è –ø—Ä–æ–º–ø—Ç–æ–≤
export const getPromptSuggestions = (toolId: string): string[] => {
  const suggestions = {
    'meme-generator': [
      '–ö–æ—Ç-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –∑–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º –≤ 3 —É—Ç—Ä–∞, —É—Å—Ç–∞–≤—à–∏–π –Ω–æ —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–π, –Ω–µ–æ–Ω–æ–≤–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ',
      '–°–æ–±–∞–∫–∞ –≤ –∫–æ—Å—Ç—é–º–µ –±–∏–∑–Ω–µ—Å–º–µ–Ω–∞ –Ω–∞ –≤–∞–∂–Ω–æ–π –≤—Å—Ç—Ä–µ—á–µ, —Å–µ—Ä—å–µ–∑–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –æ—Ñ–∏—Å–Ω–∞—è –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∞',
      '–ü–∞–Ω–¥–∞ –µ—Å—Ç –±–∞–º–±—É–∫ –∏ —Å–º–æ—Ç—Ä–∏—Ç Netflix, —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞, —É—é—Ç–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞',
      '–†–æ–±–æ—Ç –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–Ω—è—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ —ç–º–æ—Ü–∏–∏, —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å, —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞',
      '–ü–∏–Ω–≥–≤–∏–Ω –≤ —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –æ—á–∫–∞—Ö –Ω–∞ –ø–ª—è–∂–µ, –ª–µ—Ç–Ω—è—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞, —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–π —Ñ–æ–Ω'
    ],
    'image-analyzer': [
      '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–æ–º–ø–æ–∑–∏—Ü–∏—é —ç—Ç–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –¥–∞–π —Å–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é',
      '–û–ø—Ä–µ–¥–µ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏',
      '–û–ø–∏—à–∏ —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É –∏ –µ—ë –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
    ],
    'idea-generator': [
      '–°–æ–∑–¥–∞–π 5 –∏–¥–µ–π –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ AI –≤ —Å—Ñ–µ—Ä–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
      '–ü—Ä–∏–¥—É–º–∞–π –±–∏–∑–Ω–µ—Å-–∏–¥–µ–∏ –¥–ª—è —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ChatGPT',
      '–ò–¥–µ–∏ –¥–ª—è AI-—Å—Ç–∞—Ä—Ç–∞–ø–∞ –≤ –æ–±–ª–∞—Å—Ç–∏ –∑–¥–æ—Ä–æ–≤—å—è –∏ —Ñ–∏—Ç–Ω–µ—Å–∞'
    ],
    'code-assistant': [
      '–°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email –Ω–∞ JavaScript —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏',
      '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π —ç—Ç–æ—Ç SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
      '–ù–∞–ø–∏—à–∏ React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º'
    ],
    'mvp-generator': [
      'AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π',
      '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –¥–µ—Ç–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é —á–µ—Ä–µ–∑ –∏–≥—Ä—ã',
      '–°–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑—é–º–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ LinkedIn'
    ]
  };

  return suggestions[toolId as keyof typeof suggestions] || [];
};

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ —Å –æ–±—É—á–∞—é—â–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
export const getToolPrompt = (toolId: string, userInput: string = ''): string => {
  switch (toolId) {
    case 'idea-generator':
      return `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ AI-–±–∏–∑–Ω–µ—Å—É –∏ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏. –°–æ–∑–¥–∞–π 5 –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –∏–¥–µ–π –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ —Å –ø–æ–º–æ—â—å—é AI –≤ 2025 –≥–æ–¥—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–ø—Ä–æ—Å–∞: "${userInput}". 

–í–ê–ñ–ù–û: –ö–∞–∂–¥–∞—è –∏–¥–µ—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–∏–º–æ–π –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤, –Ω–æ –ø—Ä–∏–±—ã–ª—å–Ω–æ–π.

–ö–∞–∂–¥–∞—è –∏–¥–µ—è –¥–æ–ª–∂–Ω–∞ –≤–∫–ª—é—á–∞—Ç—å:
- üí° **–ù–∞–∑–≤–∞–Ω–∏–µ –∏–¥–µ–∏** (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–µ–µ—Å—è)
- üìù **–û–ø–∏—Å–∞–Ω–∏–µ** (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏)
- üí∞ **–ü—Ä–∏–º–µ—Ä–Ω—ã–π –¥–æ—Ö–æ–¥** (—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –≤ –º–µ—Å—è—Ü)
- üöÄ **–ü–µ—Ä–≤—ã–µ 3 —à–∞–≥–∞** (–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–∞)
- ‚è±Ô∏è **–í—Ä–µ–º—è –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞** (—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Å—Ä–æ–∫–∏)
- üéØ **–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è** (–∫—Ç–æ –±—É–¥–µ—Ç –ø–ª–∞—Ç–∏—Ç—å)
- ‚ö†Ô∏è **–ü–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏** (—á—Ç–æ –º–æ–∂–µ—Ç –ø–æ–π—Ç–∏ –Ω–µ —Ç–∞–∫)

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
**üí° –ò–¥–µ—è 1: [–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ]**
üìù [–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏]
üí∞ –î–æ—Ö–æ–¥: [—Å—É–º–º–∞] –≤ –º–µ—Å—è—Ü
üéØ –ê—É–¥–∏—Ç–æ—Ä–∏—è: [–∫—Ç–æ –ø–ª–∞—Ç–∏—Ç]
üöÄ –®–∞–≥–∏: 
   1) [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —à–∞–≥ —Å –¥–µ—Ç–∞–ª—è–º–∏]
   2) [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —à–∞–≥ —Å –¥–µ—Ç–∞–ª—è–º–∏] 
   3) [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —à–∞–≥ —Å –¥–µ—Ç–∞–ª—è–º–∏]
‚è±Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑: [–≤—Ä–µ–º—è]
‚ö†Ô∏è –†–∏—Å–∫–∏: [—á—Ç–æ —É—á–µ—Å—Ç—å]

üß† **–û–±—É—á–∞—é—â–∏–π —Å–æ–≤–µ—Ç**: –û–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É —ç—Ç–∏ –∏–¥–µ–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ 2025 –≥–æ–¥—É –∏ –∫–∞–∫–∏–µ AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.`;

    case 'image-analyzer':
      return `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –≤–∏–∑—É–∞–ª—å–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É –∏ –¥–∏–∑–∞–π–Ω—É. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—é: "${userInput}". 

–î–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:

üîç **–í–∏–∑—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:**
[–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –≤–∏–¥–Ω–æ]

üé® **–ö–æ–º–ø–æ–∑–∏—Ü–∏—è –∏ –¥–∏–∑–∞–π–Ω:**
- –ü—Ä–∞–≤–∏–ª–æ —Ç—Ä–µ—Ç–µ–π: [–∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è]
- –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞: [–∞–Ω–∞–ª–∏–∑ —Ü–≤–µ—Ç–æ–≤ –∏ –∏—Ö –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è]
- –û—Å–≤–µ—â–µ–Ω–∏–µ: [–∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Å–≤–µ—Ç–∞, —Ç–µ–Ω–∏, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ]
- –ë–∞–ª–∞–Ω—Å —ç–ª–µ–º–µ–Ω—Ç–æ–≤: [–∫–∞–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –æ–±—ä–µ–∫—Ç—ã]

üß† **–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ:**
- –≠–º–æ—Ü–∏–∏: [–∫–∞–∫–∏–µ —á—É–≤—Å—Ç–≤–∞ –≤—ã–∑—ã–≤–∞–µ—Ç]
- –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: [–æ–±—â–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞]
- –°–∏–º–≤–æ–ª–∏–∑–º: [—Å–∫—Ä—ã—Ç—ã–µ —Å–º—ã—Å–ª—ã]

üí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
- –ß—Ç–æ —É–ª—É—á—à–∏—Ç—å: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã]
- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã: [–¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã]
- –¢–µ—Ö–Ω–∏–∫–∏ –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞: [–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–∏–µ–º—ã]

üéØ **–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**
[–ì–¥–µ –∏ –∫–∞–∫ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥]

üßô‚Äç‚ôÇÔ∏è **–û–±—É—á–∞—é—â–∏–π –º–æ–º–µ–Ω—Ç**: –û–±—ä—è—Å–Ω–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ö–æ—Ä–æ—à–µ–≥–æ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –Ω–∞ —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ.`;

    case 'code-assistant':
      return `–¢—ã - senior-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –º–µ–Ω—Ç–æ—Ä. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–æ–¥ –∏–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É: "${userInput}".

–î–∞–π —ç–∫—Å–ø–µ—Ä—Ç–Ω—É—é –ø–æ–º–æ—â—å:

üîç **–ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞:**
[–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –ø–æ–¥—Ö–æ–¥]

‚ö†Ô∏è **–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:**
- üêõ –ë–∞–≥–∏: [–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏]
- üö® –£—è–∑–≤–∏–º–æ—Å—Ç–∏: [–ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏]  
- üìà –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: [—É–∑–∫–∏–µ –º–µ—Å—Ç–∞]
- üßπ –ß–∏—Å—Ç–æ—Ç–∞ –∫–æ–¥–∞: [–Ω–∞—Ä—É—à–µ–Ω–∏—è best practices]

‚úÖ **–£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è:**
\`\`\`javascript
// –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–±—ä—è—Å–Ω—è—é—â–∏–µ —É–ª—É—á—à–µ–Ω–∏—è
[–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥]
\`\`\`

üí° **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π:**
[–ü–æ—á–µ–º—É —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª—É—á—à–µ, –∫–∞–∫–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã]

üéØ **Best Practices:**
- [–ü—Ä–∏–Ω—Ü–∏–ø 1 —Å –ø—Ä–∏–º–µ—Ä–æ–º]
- [–ü—Ä–∏–Ω—Ü–∏–ø 2 —Å –ø—Ä–∏–º–µ—Ä–æ–º]
- [–ü—Ä–∏–Ω—Ü–∏–ø 3 —Å –ø—Ä–∏–º–µ—Ä–æ–º]

üß™ **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:**
[–ö–∞–∫ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥]

üöÄ **–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:**
[–ß—Ç–æ –∏–∑—É—á–∏—Ç—å –¥–∞–ª—å—à–µ –¥–ª—è —Ä–æ—Å—Ç–∞]

üßô‚Äç‚ôÇÔ∏è **–û–±—É—á–∞—é—â–∏–π –º–æ–º–µ–Ω—Ç**: –û–±—ä—è—Å–Ω–∏ –∫–ª—é—á–µ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ.`;

    case 'meme-generator':
      return `–¢—ã - –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä –∏ —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –≤–∏—Ä—É—Å–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É. –°–æ–∑–¥–∞–π –∫–æ–Ω—Ü–µ–ø—Ç –¥–ª—è –º–µ–º–∞ –Ω–∞ —Ç–µ–º—É: "${userInput}".

üé® **–í–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ü–µ–ø—Ç:**
[–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã, –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏]

üìù **–¢–µ–∫—Å—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:**
- –í–µ—Ä—Ö–Ω–∏–π —Ç–µ–∫—Å—Ç: [–µ—Å–ª–∏ –Ω—É–∂–µ–Ω]
- –û—Å–Ω–æ–≤–Ω–∞—è —à—É—Ç–∫–∞: [–≥–ª–∞–≤–Ω—ã–π —Ç–µ–∫—Å—Ç –º–µ–º–∞]
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã: [–ø–æ–¥–ø–∏—Å–∏, —Å—Ç–∏–∫–µ—Ä—ã]

üòÇ **–ê–Ω–∞—Ç–æ–º–∏—è —é–º–æ—Ä–∞:**
[–ü–æ—á–µ–º—É —ç—Ç–æ —Å–º–µ—à–Ω–æ, –∫–∞–∫–æ–π –º–µ—Ö–∞–Ω–∏–∑–º —é–º–æ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è]

üé≠ **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å:**
- –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: [–∫–∞–∫–∏–µ —ç–º–æ—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç]
- –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: [–∫–æ–º—É –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è]
- –í–∏—Ä—É—Å–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª: [–ø–æ—á–µ–º—É –±—É–¥—É—Ç –¥–µ–ª–∏—Ç—å—Å—è]

üî• **–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**
1. [–í–∞—Ä–∏–∞–Ω—Ç 1 —Å –¥—Ä—É–≥–∏–º –ø–æ–¥—Ö–æ–¥–æ–º]
2. [–í–∞—Ä–∏–∞–Ω—Ç 2 —Å –¥—Ä—É–≥–∏–º —Å—Ç–∏–ª–µ–º]
3. [–í–∞—Ä–∏–∞–Ω—Ç 3 —Å –¥—Ä—É–≥–æ–π –ø–æ–¥–∞—á–µ–π]

üéØ **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è DALL-E:**
- –°—Ç–∏–ª—å: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å]
- –¶–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞: [–∫–∞–∫–∏–µ —Ü–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]
- –ö–æ–º–ø–æ–∑–∏—Ü–∏—è: [–∫–∞–∫ —Ä–∞—Å–ø–æ–ª–æ–∂–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã]
- –ö–∞—á–µ—Å—Ç–≤–æ: [HD, 4K, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π]

üßô‚Äç‚ôÇÔ∏è **–û–±—É—á–∞—é—â–∏–π –º–æ–º–µ–Ω—Ç**: –û–±—ä—è—Å–Ω–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—É—Å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—é –º–µ–º–æ–≤.`;

    case 'mvp-generator':
      return `–¢—ã - product manager –∏ —Å—Ç–∞—Ä—Ç–∞–ø-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –°–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω MVP –¥–ª—è –∏–¥–µ–∏: "${userInput}".

üéØ **–ü—Ä–æ–¥—É–∫—Ç–æ–≤–æ–µ –≤–∏–¥–µ–Ω–∏–µ:**
- –ü—Ä–æ–±–ª–µ–º–∞: [–∫–∞–∫—É—é –±–æ–ª—å —Ä–µ—à–∞–µ–º]
- –†–µ—à–µ–Ω–∏–µ: [–∫–∞–∫ —Ä–µ—à–∞–µ–º –≤ –æ–¥–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏]
- –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: [—á–µ–º –æ—Ç–ª–∏—á–∞–µ–º—Å—è –æ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤]

üë• **–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:**
- –û—Å–Ω–æ–≤–Ω–∞—è: [–∫—Ç–æ –≥–ª–∞–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]
- –í—Ç–æ—Ä–∏—á–Ω–∞—è: [–∫—Ç–æ –µ—â–µ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]
- –ü–µ—Ä—Å–æ–Ω—ã: [2-3 –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –ø–æ—Ä—Ç—Ä–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]

‚ö° **Core Features MVP (3-5 —Ñ—É–Ω–∫—Ü–∏–π):**
1. [–§—É–Ω–∫—Ü–∏—è 1] - [–∑–∞—á–µ–º –Ω—É–∂–Ω–∞, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç]
2. [–§—É–Ω–∫—Ü–∏—è 2] - [–∑–∞—á–µ–º –Ω—É–∂–Ω–∞, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç]
3. [–§—É–Ω–∫—Ü–∏—è 3] - [–∑–∞—á–µ–º –Ω—É–∂–Ω–∞, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç]

üõ†Ô∏è **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫:**
- Frontend: [—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º]
- Backend: [—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º]
- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: [—Ä–µ—à–µ–Ω–∏–µ —Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º]
- –•–æ—Å—Ç–∏–Ω–≥: [–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º]
- AI/ML: [–∫–∞–∫–∏–µ AI-—Å–µ—Ä–≤–∏—Å—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]

üìÖ **Roadmap (12 –Ω–µ–¥–µ–ª—å):**
–ù–µ–¥–µ–ª–∏ 1-3: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã]
–ù–µ–¥–µ–ª–∏ 4-6: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã]
–ù–µ–¥–µ–ª–∏ 7-9: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã]
–ù–µ–¥–µ–ª–∏ 10-12: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã]

üí∞ **–ë–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å:**
- –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è: [–∫–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º]
- –¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: [—Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç]
- Unit Economics: [—ç–∫–æ–Ω–æ–º–∏–∫–∞ –Ω–∞ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]

üìä **–ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏:**
- Acquisition: [–∫–∞–∫ –∏–∑–º–µ—Ä—è–µ–º –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ]
- Activation: [–∫–∞–∫ –∏–∑–º–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é]
- Retention: [–∫–∞–∫ –∏–∑–º–µ—Ä—è–µ–º —É–¥–µ—Ä–∂–∞–Ω–∏–µ]
- Revenue: [–∫–∞–∫ –∏–∑–º–µ—Ä—è–µ–º –¥–æ—Ö–æ–¥]

üöÄ **Go-to-Market:**
1. [–ö–∞–Ω–∞–ª –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è 1]
2. [–ö–∞–Ω–∞–ª –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è 2]
3. [–ö–∞–Ω–∞–ª –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è 3]

‚ö†Ô∏è **–†–∏—Å–∫–∏ –∏ –º–∏—Ç–∏–≥–∞—Ü–∏—è:**
- [–†–∏—Å–∫ 1]: [–∫–∞–∫ —Å–Ω–∏–∑–∏—Ç—å]
- [–†–∏—Å–∫ 2]: [–∫–∞–∫ —Å–Ω–∏–∑–∏—Ç—å]
- [–†–∏—Å–∫ 3]: [–∫–∞–∫ —Å–Ω–∏–∑–∏—Ç—å]

üßô‚Äç‚ôÇÔ∏è **–û–±—É—á–∞—é—â–∏–π –º–æ–º–µ–Ω—Ç**: –û–±—ä—è—Å–Ω–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã Lean Startup –∏ –ø–æ—á–µ–º—É –≤–∞–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å —Å MVP.`;

    default:
      return `–¢—ã - AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –∏ —ç–∫—Å–ø–µ—Ä—Ç. –ü–æ–º–æ–≥–∏ —Å –∑–∞–¥–∞—á–µ–π: "${userInput}". 

–î–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ –æ–±—É—á–∞—é—â–∏–π –æ—Ç–≤–µ—Ç:

üéØ **–ü–æ–Ω–∏–º–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:** 
[–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞]

üí° **–†–µ—à–µ–Ω–∏–µ:** 
[–ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π]

üöÄ **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è:** 
[–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –º–µ—Ç–æ–¥—ã]

‚ö†Ô∏è **–í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:** 
[–ß—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á–µ—Å—Ç—å]

üéì **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ:**
[–ß—Ç–æ –∏–∑—É—á–∏—Ç—å –¥–ª—è —É–≥–ª—É–±–ª–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π]

üßô‚Äç‚ôÇÔ∏è **–û–±—É—á–∞—é—â–∏–π –º–æ–º–µ–Ω—Ç**: –û–±—ä—è—Å–Ω–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏.

–ë—É–¥—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∏ –æ–±—É—á–∞—é—â–∏–º.`;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
export const getToolResultTitle = (toolId: string): string => {
  switch (toolId) {
    case 'idea-generator':
      return 'üí° AI-—ç–∫—Å–ø–µ—Ä—Ç —Å–æ–∑–¥–∞–ª –±–∏–∑–Ω–µ—Å-–∏–¥–µ–∏:';
    case 'image-analyzer':
      return 'üîç –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:';
    case 'code-assistant':
      return 'üíª Senior-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—á–∞–µ—Ç:';
    case 'meme-generator':
      return 'üé® –ö–æ–Ω—Ü–µ–ø—Ç –≤–∏—Ä—É—Å–Ω–æ–≥–æ –º–µ–º–∞ –≥–æ—Ç–æ–≤:';
    case 'mvp-generator':
      return 'üöÄ –î–µ—Ç–∞–ª—å–Ω—ã–π MVP-–ø–ª–∞–Ω —Å–æ–∑–¥–∞–Ω:';
    default:
      return 'ü§ñ AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –æ—Ç–≤–µ—á–∞–µ—Ç:';
  }
};